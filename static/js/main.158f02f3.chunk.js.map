{"version":3,"sources":["redux/operation.js","components/ContactsList.jsx","components/ContactForm.jsx","redux/actions.js","components/Filter.jsx","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactsList.module.css"],"names":["url","axios","defaults","baseURL","fetchPhones","createAsyncThunk","a","get","phones","data","deleteById","ev","id","target","delete","submitPhone","post","ContactsList","contacts","useSelector","state","filter","isDelete","isSubmit","dispatch","useDispatch","del","useEffect","className","style","list","el","arr","name","toLowerCase","split","i","length","match","RegExp","map","listItem","phone","type","deleteButton","onClick","ContactForm","inputNameId","uuidv4","inputNumberId","useState","setName","number","setNumber","handleChangeAllInput","value","add","find","alert","addPhone","form","onSubmit","e","preventDefault","label","htmlFor","input","pattern","title","required","onChange","button","changeFilter","createAction","Filter","autoComplete","App","createReducer","fulfilled","action","payload","isLoading","rejected","pending","error","reject","_","reducer","combineReducers","store","configureStore","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.158f02f3.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst url = \"/contacts\"\r\naxios.defaults.baseURL = \"https://61966211af46280017e7e02c.mockapi.io\"\r\n\r\nexport const fetchPhones = createAsyncThunk(\r\n    'phones/fetchList',\r\n    async () => {\r\n        const phones = await axios.get(url);\r\n        return phones.data\r\n    }\r\n);\r\n\r\n\r\n\r\nexport const deleteById = createAsyncThunk(\r\n    'phones/delete',\r\n    async (ev) => {\r\n        const id = ev.target.id\r\n        await axios.delete(`${url}/${id}`);\r\n        return\r\n    }\r\n);\r\n\r\nexport const submitPhone = createAsyncThunk(\r\n    'phones/submit',\r\n    async (data) => {\r\n\r\n        await axios.post(url, data);\r\n        return\r\n    }\r\n);","import React, { useEffect } from 'react';\r\nimport style from './ContactsList.module.css';\r\nimport {  useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPhones,deleteById } from '../redux/operation';\r\n\r\n\r\n\r\n\r\nfunction ContactsList() {\r\n  const contacts = useSelector(state => state.contacts);\r\n  const filter = useSelector(state => state.filter);\r\n  const isDelete = useSelector((state) => state.isDelete);\r\n  const isSubmit=useSelector((state)=>state.isSubmit)\r\n\r\n  const dispatch = useDispatch();\r\n  const del = id => dispatch(deleteById(id));\r\n  \r\n\r\n\r\n  const phones = () => dispatch(fetchPhones());\r\n  useEffect(() => { phones() }, []);\r\n  useEffect(() => { if (isDelete) { phones() } }, [isDelete]);\r\n  useEffect(() => { if (isSubmit) { phones() } }, [isSubmit]);\r\n  \r\n  \r\n    function filteredContacts() {\r\n    return contacts.filter(el => {\r\n      const arr = el.name.toLowerCase().split(' ');\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].toLowerCase().match(new RegExp(`^${filter}`)) !== null) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n    \r\n        return (\r\n            <ul className={style.list}>        \r\n                {\r\n                    filteredContacts().map(el => (<li\r\n                        className={style.listItem}\r\n                        key={el.id} >\r\n                        {el.name}:  {el.phone}\r\n                        <button\r\n                            type=\"button\"\r\n                            className={style.deleteButton}\r\n                            id={el.id}\r\n                            onClick={del}\r\n                        >Delete</button>\r\n                      </li>))\r\n                }\r\n        </ul>\r\n    )\r\n};\r\n\r\n\r\nexport default ContactsList\r\n\r\n\r\n\r\n\r\n","import React, { useState} from 'react';\r\n\r\nimport style from './ContactsList.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { submitPhone } from '../redux/operation';\r\n\r\n\r\n\r\n\r\nexport default function ContactForm() {\r\n const inputNameId = uuidv4();\r\n  const inputNumberId = uuidv4();\r\n  \r\n  const [name,setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  \r\n  const contacts = useSelector(state => state.contacts);\r\n\r\n  const handleChangeAllInput = (ev) => {\r\n       \r\n    if (ev.target.name === \"name\") {\r\n      setName(ev.target.value)\r\n    } else if (ev.target.name === \"number\") {\r\n      setNumber(ev.target.value)\r\n    };\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const addPhone = (data) => dispatch(submitPhone(data));\r\n\r\n\r\n  function add(data) {\r\n  if (!contacts.find(el => el.name === data[0])) {\r\n    \r\n    addPhone({\r\n      name: data[0],\r\n      phone:data[1]\r\n    })\r\n    \r\n  } else {\r\n    alert(`${data[0]} is already in contacts`);\r\n    \r\n  }\r\n}\r\n\r\n  return (<>\r\n      <form className={style.form} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        add([name,number]);       \r\n         \r\n      }}>\r\n        <label className={style.label} htmlFor={inputNameId}>Name</label>\r\n        <input\r\n          className={style.input}\r\n          id={inputNameId}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeAllInput}\r\n            />\r\n            \r\n        <label className={style.label} htmlFor={inputNumberId}>Phone</label>\r\n        <input\r\n          className={style.input}\r\n          id={inputNumberId}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeAllInput}\r\n        />\r\n\r\n        <button className={style.button}\r\n          type=\"submit\"\r\n        >Add contact</button>\r\n      </form>\r\n    </>)\r\n};\r\n\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const changeFilter = createAction('changeFilter');\r\n\r\n","import style from './ContactsList.module.css';\r\nimport React, {  } from 'react';\r\nimport {changeFilter} from '../redux/actions'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function Filter() {\r\n     \r\n\r\n    const dispatch = useDispatch();\r\n    const filter = (data) => dispatch(changeFilter(data));\r\n    const filterData = (ev) => { filter(ev.target.value.toLowerCase()) };\r\n     return (<>\r\n            <label htmlFor=\"find\">Find contacts by name</label>\r\n            <input\r\n                className={style.input}\r\n                autoComplete=\"off\"\r\n                id=\"find\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]\"\r\n                onChange={filterData}\r\n                ></input>\r\n     </>   )\r\n};\r\n\r\n","import './App.css';\r\n\r\nimport ContactsList from './components/ContactsList.jsx';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter.jsx';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm />\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter />\r\n\r\n        <ContactsList />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","\r\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './actions';\r\nimport { fetchPhones, deleteById, submitPhone } from './operation'\r\n\r\n\r\nexport function filterRecord(state = {}, action) {\r\n  return { ...state, filter: action.payload };\r\n}\r\n\r\n\r\nconst contacts = createReducer([],\r\n  {\r\n    [fetchPhones.fulfilled]: (state, action) => action.payload,\r\n  }\r\n);\r\n\r\nconst isLoading = createReducer(false,\r\n  {\r\n    [fetchPhones.fulfilled]: () => false,\r\n    [fetchPhones.rejected]: () => false,\r\n    [fetchPhones.pending]: () => true\r\n  }\r\n);\r\n\r\nconst error = createReducer(false,\r\n  {\r\n    [fetchPhones.fulfilled]: () => false,\r\n    [fetchPhones.rejected]: () => true,\r\n    [deleteById.reject]: () => true,\r\n    [deleteById.fulfilled]: () => false,\r\n  }\r\n);\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, action) => action.payload\r\n});\r\n\r\nconst isDelete = createReducer(false, {\r\n  [deleteById.pending]: () => false,\r\n  [deleteById.fulfilled]: () => true\r\n}\r\n);\r\n\r\nconst isSubmit = createReducer(false, {\r\n  [submitPhone.pending]: () => false,\r\n  [submitPhone.fulfilled]: () => true\r\n}\r\n);\r\n\r\nexport const reducer = combineReducers({\r\n  contacts,\r\n  isLoading,\r\n  error,\r\n  filter,\r\n  isDelete,\r\n  isSubmit,\r\n});\r\n\r\n\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { reducer } from './reducers';\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsList_form__391nS\",\"input\":\"ContactsList_input__19mlP\",\"label\":\"ContactsList_label__3yL9j\",\"button\":\"ContactsList_button__wWBwk\",\"list\":\"ContactsList_list__usn-m\",\"listItem\":\"ContactsList_listItem__WkmUV\",\"deleteButton\":\"ContactsList_deleteButton__aUV4B\"};"],"sourceRoot":""}